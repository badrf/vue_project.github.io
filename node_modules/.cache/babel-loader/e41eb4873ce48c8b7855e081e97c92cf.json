{"remainingRequest":"/home/chemoune/Bureau/vue-project/node_modules/babel-loader/lib/index.js!/home/chemoune/Bureau/vue-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/chemoune/Bureau/vue-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/chemoune/Bureau/vue-project/node_modules/vuetable/src/components/Vuetable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/chemoune/Bureau/vue-project/node_modules/vuetable/src/components/Vuetable.vue","mtime":1486047229000},{"path":"/home/chemoune/Bureau/vue-project/node_modules/cache-loader/dist/cjs.js","mtime":1544640643324},{"path":"/home/chemoune/Bureau/vue-project/node_modules/babel-loader/lib/index.js","mtime":1544640643152},{"path":"/home/chemoune/Bureau/vue-project/node_modules/cache-loader/dist/cjs.js","mtime":1544640643324},{"path":"/home/chemoune/Bureau/vue-project/node_modules/vue-loader/lib/index.js","mtime":1544640646048}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    wrapperClass: {\n      type: String,\n      default: function _default() {\n        return null;\n      }\n    },\n    tableWrapper: {\n      type: String,\n      default: function _default() {\n        return null;\n      }\n    },\n    tableClass: {\n      type: String,\n      default: function _default() {\n        return 'ui blue striped selectable celled stackable attached table';\n      }\n    },\n    loadingClass: {\n      type: String,\n      default: function _default() {\n        return 'loading';\n      }\n    },\n    dataPath: {\n      type: String,\n      default: function _default() {\n        return 'data';\n      }\n    },\n    paginationPath: {\n      type: String,\n      default: function _default() {\n        return 'links.pagination';\n      }\n    },\n    fields: {\n      type: Array,\n      required: true\n    },\n    apiUrl: {\n      type: String,\n      required: true\n    },\n    sortOrder: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    multiSort: {\n      type: Boolean,\n      default: function _default() {\n        return false;\n      }\n    },\n\n    /*\r\n     * physical key that will trigger multi-sort option\r\n     * possible values: 'alt', 'ctrl', 'meta', 'shift'\r\n     * 'ctrl' might not work as expected on Mac\r\n     */\n    multiSortKey: {\n      type: String,\n      default: 'alt'\n    },\n    perPage: {\n      type: Number,\n      coerce: function coerce(val) {\n        return parseInt(val);\n      },\n      default: function _default() {\n        return 10;\n      }\n    },\n    ascendingIcon: {\n      type: String,\n      default: function _default() {\n        return 'blue chevron up icon';\n      }\n    },\n    descendingIcon: {\n      type: String,\n      default: function _default() {\n        return 'blue chevron down icon';\n      }\n    },\n    appendParams: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    showPagination: {\n      type: Boolean,\n      default: function _default() {\n        return true;\n      }\n    },\n    paginationComponent: {\n      type: String,\n      default: function _default() {\n        return 'vuetable-pagination';\n      }\n    },\n    paginationInfoTemplate: {\n      type: String,\n      default: function _default() {\n        return \"Displaying {from} to {to} of {total} items\";\n      }\n    },\n    paginationInfoNoDataTemplate: {\n      type: String,\n      default: function _default() {\n        return 'No relevant data';\n      }\n    },\n    paginationClass: {\n      type: String,\n      default: function _default() {\n        return 'ui bottom attached segment grid';\n      }\n    },\n    paginationInfoClass: {\n      type: String,\n      default: function _default() {\n        return 'left floated left aligned six wide column';\n      }\n    },\n    paginationComponentClass: {\n      type: String,\n      default: function _default() {\n        return 'right floated right aligned six wide column';\n      }\n    },\n    paginationConfig: {\n      type: String,\n      default: function _default() {\n        return 'paginationConfig';\n      }\n    },\n    paginationConfigCallback: {\n      type: String,\n      default: function _default() {\n        return 'paginationConfig';\n      }\n    },\n    itemActions: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    queryParams: {\n      type: Object,\n      default: function _default() {\n        return {\n          sort: 'sort',\n          page: 'page',\n          perPage: 'per_page'\n        };\n      }\n    },\n    loadOnStart: {\n      type: Boolean,\n      default: function _default() {\n        return true;\n      }\n    },\n    selectedTo: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    httpOptions: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    detailRow: {\n      type: String,\n      default: ''\n    },\n    detailRowCallback: {\n      type: String,\n      default: ''\n    },\n    detailRowId: {\n      type: String,\n      default: 'id'\n    },\n    detailRowTransition: {\n      type: String,\n      default: ''\n    },\n    detailRowClass: {\n      type: String,\n      default: 'vuetable-detail-row'\n    },\n    detailRowComponent: {\n      type: String,\n      default: ''\n    },\n    rowClassCallback: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      eventPrefix: 'vuetable:',\n      tableData: null,\n      tablePagination: null,\n      currentPage: 1,\n      visibleDetailRows: []\n    };\n  },\n  directives: {\n    'attr': {\n      update: function update(value) {\n        for (var i in value) {\n          this.el.setAttribute(i, value[i]);\n        }\n      }\n    }\n  },\n  computed: {\n    paginationInfo: function paginationInfo() {\n      if (this.tablePagination == null || this.tablePagination.total == 0) {\n        return this.paginationInfoNoDataTemplate;\n      }\n\n      return this.paginationInfoTemplate.replace('{from}', this.tablePagination.from || 0).replace('{to}', this.tablePagination.to || 0).replace('{total}', this.tablePagination.total || 0);\n    },\n    useDetailRow: function useDetailRow() {\n      if (this.tableData && typeof this.tableData[0][this.detailRowId] === 'undefined') {\n        console.warn('You need to define \"detail-row-id\" in order for detail-row feature to work!');\n        return false;\n      }\n\n      return this.detailRowCallback.trim() !== '' || this.detailRowComponent !== '';\n    },\n    useDetailRowComponent: function useDetailRowComponent() {\n      return this.detailRowComponent !== '';\n    },\n    countVisibleFields: function countVisibleFields() {\n      return this.fields.filter(function (field) {\n        return field.visible;\n      }).length;\n    }\n  },\n  methods: {\n    normalizeFields: function normalizeFields() {\n      var self = this;\n      var obj;\n      this.fields.forEach(function (field, i) {\n        if (typeof field === 'string') {\n          obj = {\n            name: field,\n            title: self.setTitle(field),\n            titleClass: '',\n            dataClass: '',\n            callback: null,\n            visible: true\n          };\n        } else {\n          obj = {\n            name: field.name,\n            title: field.title === undefined ? self.setTitle(field.name) : field.title,\n            sortField: field.sortField,\n            titleClass: field.titleClass === undefined ? '' : field.titleClass,\n            dataClass: field.dataClass === undefined ? '' : field.dataClass,\n            callback: field.callback === undefined ? '' : field.callback,\n            visible: field.visible === undefined ? true : field.visible\n          };\n        }\n\n        self.fields.$set(i, obj);\n      });\n    },\n    setTitle: function setTitle(str) {\n      if (this.isSpecialField(str)) {\n        return '';\n      }\n\n      return this.titleCase(str);\n    },\n    titleCase: function titleCase(str) {\n      return str.replace(/\\w+/g, function (txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      });\n    },\n    notIn: function notIn(str, arr) {\n      return arr.indexOf(str) === -1;\n    },\n    loadData: function loadData() {\n      var self = this;\n      var wrapper = document.querySelector(this.tableWrapper);\n      this.showLoadingAnimation(wrapper);\n      var url = this.apiUrl + '?' + this.getAllQueryParams();\n      this.$http.get(url, this.httpOptions).then(function (response) {\n        var body = this.transform(response.body);\n        self.tableData = self.getObjectValue(body, self.dataPath, null);\n        self.tablePagination = self.getObjectValue(body, self.paginationPath, null);\n\n        if (self.tablePagination === null) {\n          console.warn('vuetable: pagination-path \"' + self.paginationPath + '\" not found. ' + 'It looks like the data returned from the sever does not have pagination information ' + 'or you may have set it incorrectly.');\n        }\n\n        self.$nextTick(function () {\n          self.dispatchEvent('load-success', response);\n          self.broadcastEvent('load-success', self.tablePagination);\n          self.hideLoadingAnimation(wrapper);\n        });\n      }, function (response) {\n        self.dispatchEvent('load-error', response);\n        self.broadcastEvent('load-error', response);\n        self.hideLoadingAnimation(wrapper);\n      });\n    },\n    getAllQueryParams: function getAllQueryParams() {\n      var params = [this.queryParams.sort + '=' + this.getSortParam(), this.queryParams.page + '=' + this.currentPage, this.queryParams.perPage + '=' + this.perPage].join('&');\n\n      if (this.appendParams.length > 0) {\n        params += '&' + this.appendParams.join('&');\n      }\n\n      return params;\n    },\n    showLoadingAnimation: function showLoadingAnimation(wrapper) {\n      if (wrapper !== null) {\n        this.addClass(wrapper, this.loadingClass);\n      }\n\n      this.dispatchEvent('loading');\n    },\n    hideLoadingAnimation: function hideLoadingAnimation(wrapper) {\n      if (wrapper !== null) {\n        this.removeClass(wrapper, this.loadingClass);\n      }\n\n      this.dispatchEvent('loaded');\n    },\n    transform: function transform(data) {\n      var func = 'transform';\n\n      if (this.parentFunctionExists(func)) {\n        return this.$parent[func].call(this.$parent, data);\n      }\n\n      return data;\n    },\n    parentFunctionExists: function parentFunctionExists(func) {\n      return func !== '' && typeof this.$parent[func] === 'function';\n    },\n    getTitle: function getTitle(field) {\n      if (typeof field.title === 'undefined') {\n        return field.name.replace('.', ' ');\n      }\n\n      return field.title;\n    },\n    getSortParam: function getSortParam() {\n      if (!this.sortOrder || this.sortOrder.field == '') {\n        return '';\n      }\n\n      if (typeof this.$parent['getSortParam'] == 'function') {\n        return this.$parent['getSortParam'].call(this.$parent, this.sortOrder);\n      }\n\n      return this.getDefaultSortParam();\n    },\n    getDefaultSortParam: function getDefaultSortParam() {\n      var result = '';\n\n      for (var i = 0; i < this.sortOrder.length; i++) {\n        var fieldName = typeof this.sortOrder[i].sortField === 'undefined' ? this.sortOrder[i].field : this.sortOrder[i].sortField;\n        result += fieldName + '|' + this.sortOrder[i].direction + (i + 1 < this.sortOrder.length ? ',' : '');\n      }\n\n      return result;\n    },\n    addClass: function addClass(el, className) {\n      if (el.classList) el.classList.add(className);else el.className += ' ' + className;\n    },\n    removeClass: function removeClass(el, className) {\n      if (el.classList) el.classList.remove(className);else el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    },\n    dispatchEvent: function dispatchEvent(eventName, args) {\n      this.$dispatch(this.eventPrefix + eventName, args);\n    },\n    broadcastEvent: function broadcastEvent(eventName, args) {\n      this.$broadcast(this.eventPrefix + eventName, args);\n    },\n    orderBy: function orderBy(field, event) {\n      if (!this.isSortable(field)) {\n        return;\n      }\n\n      var key = this.multiSortKey.toLowerCase() + 'Key';\n\n      if (this.multiSort && event[key]) {\n        //adding column to multisort\n        var i = this.currentSortOrder(field);\n\n        if (i === false) {\n          //this field is not in the sort array yet\n          this.sortOrder.push({\n            field: field.sortField,\n            direction: 'asc'\n          });\n        } else {\n          //this field is in the sort array, now we change its state\n          if (this.sortOrder[i].direction == 'asc') {\n            // switch direction\n            this.sortOrder[i].direction = 'desc';\n          } else {\n            //remove sort condition\n            this.sortOrder.splice(i, 1);\n          }\n        }\n      } else {\n        //no multisort, or resetting sort\n        if (this.sortOrder.length == 0) {\n          this.sortOrder.push({\n            field: '',\n            direction: 'asc'\n          });\n        }\n\n        this.sortOrder.splice(1); //removes additional columns\n\n        if (this.sortOrder[0].field == field.sortField) {\n          // change sort direction\n          this.sortOrder[0].direction = this.sortOrder[0].direction == 'asc' ? 'desc' : 'asc';\n        } else {\n          // reset sort direction\n          this.sortOrder[0].direction = 'asc';\n        }\n\n        this.sortOrder[0].field = field.sortField;\n      }\n\n      this.currentPage = 1; // reset page index\n\n      this.loadData();\n    },\n    isSortable: function isSortable(field) {\n      return !(typeof field.sortField == 'undefined');\n    },\n    isCurrentSortField: function isCurrentSortField(field) {\n      return this.currentSortOrder(field) !== false;\n    },\n    currentSortOrder: function currentSortOrder(field) {\n      if (!this.isSortable(field)) {\n        return false;\n      }\n\n      for (var i = 0; i < this.sortOrder.length; i++) {\n        if (this.sortOrder[i].field == field.sortField) {\n          return i;\n        }\n      }\n\n      return false;\n    },\n    sortIcon: function sortIcon(field) {\n      var i = this.currentSortOrder(field);\n\n      if (i !== false) {\n        return this.sortOrder[i].direction == 'asc' ? this.ascendingIcon : this.descendingIcon;\n      } else {\n        return '';\n      }\n    },\n    sortIconOpacity: function sortIconOpacity(field) {\n      //fields with stronger precedence have darker color\n      //if there are few fields, we go down by 0.3\n      //ex. 2 fields are selected: 1.0, 0.7\n      //if there are more we go down evenly on the given spectrum\n      //ex. 6 fields are selected: 1.0, 0.86, 0.72, 0.58, 0.44, 0.3\n      var max = 1.0;\n      var min = 0.3;\n      var step = 0.3;\n      var count = this.sortOrder.length;\n      var current = this.currentSortOrder(field);\n\n      if (max - count * step < min) {\n        step = (max - min) / (count - 1);\n      }\n\n      var opacity = max - current * step;\n      return opacity;\n    },\n    gotoPreviousPage: function gotoPreviousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.loadData();\n      }\n    },\n    gotoNextPage: function gotoNextPage() {\n      if (this.currentPage < this.tablePagination.last_page) {\n        this.currentPage++;\n        this.loadData();\n      }\n    },\n    gotoPage: function gotoPage(page) {\n      if (page != this.currentPage && page > 0 && page <= this.tablePagination.last_page) {\n        this.currentPage = page;\n        this.loadData();\n      }\n    },\n    isSpecialField: function isSpecialField(fieldName) {\n      // return fieldName.startsWith('__')\n      return fieldName.slice(0, 2) === '__';\n    },\n    hasCallback: function hasCallback(item) {\n      return item.callback ? true : false;\n    },\n    callCallback: function callCallback(field, item) {\n      if (!this.hasCallback(field)) return;\n      var args = field.callback.split('|');\n      var func = args.shift();\n\n      if (typeof this.$parent[func] == 'function') {\n        return args.length > 0 ? this.$parent[func].apply(this.$parent, [this.getObjectValue(item, field.name)].concat(args)) : this.$parent[func].call(this.$parent, this.getObjectValue(item, field.name));\n      }\n\n      return null;\n    },\n    getObjectValue: function getObjectValue(object, path, defaultValue) {\n      defaultValue = typeof defaultValue == 'undefined' ? null : defaultValue;\n      var obj = object;\n\n      if (path.trim() != '') {\n        var keys = path.split('.');\n        keys.forEach(function (key) {\n          if (obj !== null && typeof obj[key] != 'undefined' && obj[key] !== null) {\n            obj = obj[key];\n          } else {\n            obj = defaultValue;\n            return;\n          }\n        });\n      }\n\n      return obj;\n    },\n    callAction: function callAction(action, data) {\n      this.$dispatch(this.eventPrefix + 'action', action, data);\n    },\n    addParam: function addParam(param) {\n      this.appendParams.push(param);\n    },\n    toggleCheckbox: function toggleCheckbox(isChecked, dataItem, fieldName) {\n      var idColumn = this.extractArgs(fieldName);\n\n      if (idColumn === undefined) {\n        console.warn('You did not provide reference id column with \"__checkbox:<column_name>\" field!');\n        return;\n      }\n\n      var key = dataItem[idColumn];\n\n      if (isChecked) {\n        this.selectId(key);\n      } else {\n        this.unselectId(key);\n      }\n    },\n    toggleAllCheckboxes: function toggleAllCheckboxes(isChecked, fieldName) {\n      var self = this;\n      var idColumn = this.extractArgs(fieldName);\n\n      if (isChecked) {\n        this.tableData.forEach(function (dataItem) {\n          self.selectId(dataItem[idColumn]);\n        });\n      } else {\n        this.tableData.forEach(function (dataItem) {\n          self.unselectId(dataItem[idColumn]);\n        });\n      }\n    },\n    selectId: function selectId(key) {\n      if (!this.isSelectedRow(key)) {\n        this.selectedTo.push(key);\n      }\n    },\n    unselectId: function unselectId(key) {\n      this.selectedTo.$remove(key); // this.selectedTo = this.selectedTo.filter(function(item) {\n      //     return item !== key\n      // })\n    },\n    isSelectedRow: function isSelectedRow(key) {\n      return this.selectedTo.indexOf(key) >= 0;\n    },\n    rowSelected: function rowSelected(dataItem, fieldName) {\n      var idColumn = this.extractArgs(fieldName); // var key = dataItem[idColumn]\n\n      return this.isSelectedRow(dataItem[idColumn]);\n    },\n    checkCheckboxesState: function checkCheckboxesState(fieldName) {\n      var self = this;\n      var idColumn = this.extractArgs(fieldName);\n      var selector = 'th.checkbox_' + idColumn + ' input[type=checkbox]';\n      var els = document.querySelectorAll(selector); // count how many checkbox row in the current page has been checked\n\n      var selected = this.tableData.filter(function (item) {\n        return self.selectedTo.indexOf(item[idColumn]) >= 0;\n      }); // count == 0, clear the checkbox\n\n      if (selected.length <= 0) {\n        els.forEach(function (el) {\n          el.indeterminate = false;\n        });\n        return false;\n      } // count > 0 and count < perPage, set checkbox state to 'indeterminate'\n      else if (selected.length < this.perPage) {\n          els.forEach(function (el) {\n            el.indeterminate = true;\n          });\n          return true;\n        } // count == perPage, set checkbox state to 'checked'\n        else {\n            els.forEach(function (el) {\n              el.indeterminate = false;\n            });\n            return true;\n          }\n    },\n    extractName: function extractName(string) {\n      return string.split(':')[0].trim();\n    },\n    extractArgs: function extractArgs(string) {\n      return string.split(':')[1];\n    },\n    callDetailRowCallback: function callDetailRowCallback(item) {\n      var func = this.detailRowCallback.trim();\n\n      if (func === '') {\n        return '';\n      }\n\n      if (typeof this.$parent[func] == 'function') {\n        return this.$parent[func].call(this.$parent, item);\n      } else {\n        console.error('Function \"' + func + '()\" does not exist!');\n      }\n    },\n    isVisibleDetailRow: function isVisibleDetailRow(rowId) {\n      return this.visibleDetailRows.indexOf(rowId) >= 0;\n    },\n    showDetailRow: function showDetailRow(rowId) {\n      if (!this.isVisibleDetailRow(rowId)) {\n        this.visibleDetailRows.push(rowId);\n      }\n    },\n    hideDetailRow: function hideDetailRow(rowId) {\n      if (this.isVisibleDetailRow(rowId)) {\n        this.visibleDetailRows.$remove(rowId);\n      }\n    },\n    toggleDetailRow: function toggleDetailRow(rowId) {\n      if (this.isVisibleDetailRow(rowId)) {\n        this.hideDetailRow(rowId);\n      } else {\n        this.showDetailRow(rowId);\n      }\n    },\n    onRowClass: function onRowClass(dataItem, index) {\n      var func = this.rowClassCallback.trim();\n\n      if (func !== '' && typeof this.$parent[func] === 'function') {\n        return this.$parent[func].call(this.$parent, dataItem, index);\n      }\n\n      return '';\n    },\n    onRowChanged: function onRowChanged(dataItem) {\n      this.dispatchEvent('row-changed', dataItem);\n      return true;\n    },\n    onRowClicked: function onRowClicked(dataItem, event) {\n      this.$dispatch(this.eventPrefix + 'row-clicked', dataItem, event);\n      return true;\n    },\n    onRowDoubleClicked: function onRowDoubleClicked(dataItem, event) {\n      this.$dispatch(this.eventPrefix + 'row-dblclicked', dataItem, event);\n    },\n    onCellClicked: function onCellClicked(dataItem, field, event) {\n      this.$dispatch(this.eventPrefix + 'cell-clicked', dataItem, field, event);\n    },\n    onCellDoubleClicked: function onCellDoubleClicked(dataItem, field, event) {\n      this.$dispatch(this.eventPrefix + 'cell-dblclicked', dataItem, field, event);\n    },\n    onDetailRowClick: function onDetailRowClick(dataItem, event) {\n      this.$dispatch(this.eventPrefix + 'detail-row-clicked', dataItem, event);\n    },\n    callPaginationConfig: function callPaginationConfig() {\n      if (typeof this.$parent[this.paginationConfigCallback] === 'function') {\n        this.$parent[this.paginationConfigCallback].call(this.$parent, this.$refs.pagination.$options.name);\n      }\n    },\n    logDeprecatedMessage: function logDeprecatedMessage(name, replacer) {\n      var msg = '\"{name}\" prop is being deprecated and will be removed in the future. Please use \"{replacer}\" instead.';\n      console.warn(msg.replace('{name}', name).replace('{replacer}', replacer));\n    },\n    checkForDeprecatedProps: function checkForDeprecatedProps() {\n      if (this.paginationConfig !== 'paginationConfig') {\n        this.logDeprecatedMessage('paginationConfig', 'paginationConfigCallback');\n      }\n\n      if (this.detailRow !== '') {\n        this.logDeprecatedMessage('detail-row', 'detail-row-callback');\n      }\n\n      if (this.detailRowCallback !== '') {\n        this.logDeprecatedMessage('detail-row-callback', 'detail-row-component');\n      }\n    }\n  },\n  watch: {\n    'multiSort': function multiSort(newVal, oldVal) {\n      if (newVal === false && this.sortOrder.length > 1) {\n        this.sortOrder.splice(1);\n        this.loadData();\n      }\n    }\n  },\n  events: {\n    'vuetable-pagination:change-page': function vuetablePaginationChangePage(page) {\n      if (page == 'prev') {\n        this.gotoPreviousPage();\n      } else if (page == 'next') {\n        this.gotoNextPage();\n      } else {\n        this.gotoPage(page);\n      }\n    },\n    'vuetable:reload': function vuetableReload() {\n      this.loadData();\n    },\n    'vuetable:refresh': function vuetableRefresh() {\n      this.currentPage = 1;\n      this.loadData();\n    },\n    'vuetable:goto-page': function vuetableGotoPage(page) {\n      this.$emit('vuetable-pagination:change-page', page);\n    },\n    'vuetable:set-options': function vuetableSetOptions(options) {\n      for (var n in options) {\n        this.$set(n, options[n]);\n      }\n    },\n    'vuetable:toggle-detail': function vuetableToggleDetail(dataItem) {\n      this.toggleDetailRow(dataItem);\n    },\n    'vuetable:show-detail': function vuetableShowDetail(dataItem) {\n      this.showDetailRow(dataItem);\n    },\n    'vuetable:hide-detail': function vuetableHideDetail(dataItem) {\n      this.hideDetailRow(dataItem);\n    },\n    'vuetable:normalize-fields': function vuetableNormalizeFields() {\n      this.normalizeFields();\n    }\n  },\n  created: function created() {\n    this.checkForDeprecatedProps();\n    this.normalizeFields();\n\n    if (this.loadOnStart) {\n      this.loadData();\n    }\n\n    this.$nextTick(function () {\n      this.callPaginationConfig();\n    });\n  }\n};",{"version":3,"sources":["Vuetable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"{{wrapperClass}}\">\r\n        <table class=\"vuetable {{tableClass}}\">\r\n            <thead>\r\n                <tr>\r\n                    <template v-for=\"field in fields\">\r\n                        <template v-if=\"field.visible\">\r\n                            <template v-if=\"isSpecialField(field.name)\">\r\n                                <th v-if=\"extractName(field.name) == '__checkbox'\"\r\n                                    :class=\"[field.titleClass, 'checkbox_'+extractArgs(field.name)]\">\r\n                                    <input type=\"checkbox\" @change=\"toggleAllCheckboxes($event.target.checked, field.name)\"\r\n                                        :checked=\"checkCheckboxesState(field.name)\">\r\n                                </th>\r\n                                <th v-if=\"extractName(field.name) == '__component'\"\r\n                                    @click=\"orderBy(field, $event)\"\r\n                                    class=\"{{field.titleClass || ''}} {{isSortable(field) ? 'sortable' : ''}}\">\r\n                                    {{field.title || ''}}\r\n                                    <i v-if=\"isCurrentSortField(field) && field.title\"\r\n                                       class=\"{{ sortIcon(field) }}\"\r\n                                       :style=\"{opacity: sortIconOpacity(field)}\"></i>\r\n                                </th>\r\n                                <th v-if=\"notIn(extractName(field.name), ['__checkbox', '__component'])\"\r\n                                    id=\"{{field.name}}\" class=\"{{field.titleClass || ''}}\">\r\n                                    {{field.title || ''}}\r\n                                </th>\r\n                            </template>\r\n                            <template v-else>\r\n                                <th @click=\"orderBy(field, $event)\"\r\n                                    id=\"_{{field.name}}\"\r\n                                    class=\"{{field.titleClass || ''}} {{isSortable(field) ? 'sortable' : ''}}\">\r\n                                    {{getTitle(field) | capitalize}}&nbsp;\r\n                                    <i v-if=\"isCurrentSortField(field)\" class=\"{{ sortIcon(field) }}\" :style=\"{opacity: sortIconOpacity(field)}\"></i>\r\n                                </th>\r\n                            </template>\r\n                        </template>\r\n                    </template>\r\n                </tr>\r\n            </thead>\r\n            <tbody v-cloak>\r\n                <template v-for=\"(itemNumber, item) in tableData\">\r\n                    <tr @dblClick=\"onRowDoubleClicked(item, $event)\" @click=\"onRowClicked(item, $event)\" :render=\"onRowChanged(item)\" :class=\"onRowClass(item, itemNumber)\">\r\n                        <template v-for=\"field in fields\">\r\n                            <template v-if=\"field.visible\">\r\n                                <template v-if=\"isSpecialField(field.name)\">\r\n                                    <td v-if=\"extractName(field.name) == '__sequence'\" class=\"vuetable-sequence {{field.dataClass}}\"\r\n                                        v-html=\"tablePagination.from + itemNumber\">\r\n                                    </td>\r\n                                    <td v-if=\"extractName(field.name) == '__checkbox'\" class=\"vuetable-checkboxes {{field.dataClass}}\">\r\n                                        <input type=\"checkbox\"\r\n                                            @change=\"toggleCheckbox($event.target.checked, item, field.name)\"\r\n                                            :checked=\"rowSelected(item, field.name)\">\r\n                                    </td>\r\n                                    <td v-if=\"field.name == '__actions'\" class=\"vuetable-actions {{field.dataClass}}\">\r\n                                        <template v-for=\"action in itemActions\">\r\n                                            <button class=\"{{ action.class }}\" @click=\"callAction(action.name, item)\" v-attr=\"action.extra\">\r\n                                                <i class=\"{{ action.icon }}\"></i> {{ action.label }}\r\n                                            </button>\r\n                                        </template>\r\n                                    </td>\r\n                                    <td v-if=\"extractName(field.name) == '__component'\" class=\"{{field.dataClass}}\">\r\n                                        <component :is=\"extractArgs(field.name)\" :row-data=\"item\" :row-index=\"itemNumber\"></component>\r\n                                    </td>\r\n                                </template>\r\n                                <template v-else>\r\n                                    <td v-if=\"hasCallback(field)\" class=\"{{field.dataClass}}\" @click=\"onCellClicked(item, field, $event)\" @dblclick=\"onCellDoubleClicked(item, field, $event)\">\r\n                                        {{{ callCallback(field, item) }}}\r\n                                    </td>\r\n                                    <td v-else class=\"{{field.dataClass}}\" @click=\"onCellClicked(item, field, $event)\" @dblclick=\"onCellDoubleClicked(item, field, $event)\">\r\n                                        {{{ getObjectValue(item, field.name, \"\") }}}\r\n                                    </td>\r\n                                </template>\r\n                            </template>\r\n                        </template>\r\n                    </tr>\r\n                    <template v-if=\"useDetailRow\">\r\n                      <template v-if=\"useDetailRowComponent\">\r\n                        <tr v-if=\"isVisibleDetailRow(item[detailRowId])\"\r\n                          @click=\"onDetailRowClick(item, $event)\"\r\n                          :transition=\"detailRowTransition\"\r\n                          :class=\"[detailRowClass]\"\r\n                        >\r\n                          <td :colspan=\"countVisibleFields\">\r\n                            <component :is=\"detailRowComponent\" :row-data=\"item\" :row-index=\"itemNumber\"></component>\r\n                          </td>\r\n                        </tr>\r\n                      </template>\r\n                      <template v-else>\r\n                        <tr v-if=\"isVisibleDetailRow(item[detailRowId])\"\r\n                          v-html=\"callDetailRowCallback(item)\"\r\n                          @click=\"onDetailRowClick(item, $event)\"\r\n                          :transition=\"detailRowTransition\"\r\n                          :class=\"[detailRowClass]\"\r\n                        ></tr>\r\n                      </template>\r\n                    </template>\r\n                </template>\r\n            </tbody>\r\n        </table>\r\n        <div v-if=\"showPagination\" class=\"vuetable-pagination {{paginationClass}}\">\r\n            <div class=\"vuetable-pagination-info {{paginationInfoClass}}\"\r\n                 v-html=\"paginationInfo\">\r\n            </div>\r\n            <div v-show=\"tablePagination && tablePagination.last_page > 1\"\r\n                class=\"vuetable-pagination-component {{paginationComponentClass}}\">\r\n                <component v-ref:pagination :is=\"paginationComponent\"></component>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        wrapperClass: {\r\n            type: String,\r\n            default: function() {\r\n                return null\r\n            }\r\n        },\r\n        tableWrapper: {\r\n            type: String,\r\n            default: function() {\r\n                return null\r\n            }\r\n        },\r\n        tableClass: {\r\n            type: String,\r\n            default: function() {\r\n                return 'ui blue striped selectable celled stackable attached table'\r\n            }\r\n        },\r\n        loadingClass: {\r\n            type: String,\r\n            default: function() {\r\n                return 'loading'\r\n            }\r\n        },\r\n        dataPath: {\r\n            type: String,\r\n            default: function() {\r\n                return 'data'\r\n            }\r\n        },\r\n        paginationPath: {\r\n            type: String,\r\n            default: function() {\r\n                return 'links.pagination'\r\n            }\r\n        },\r\n        fields: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        apiUrl: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        sortOrder: {\r\n            type: Array,\r\n            default: function() {\r\n                return [];\r\n            }\r\n        },\r\n        multiSort: {\r\n            type: Boolean,\r\n            default: function() {\r\n                return false\r\n            }\r\n        },\r\n        /*\r\n         * physical key that will trigger multi-sort option\r\n         * possible values: 'alt', 'ctrl', 'meta', 'shift'\r\n         * 'ctrl' might not work as expected on Mac\r\n         */\r\n        multiSortKey: {\r\n            type: String,\r\n            default: 'alt'\r\n        },\r\n        perPage: {\r\n            type: Number,\r\n            coerce: function(val) {\r\n                return parseInt(val)\r\n            },\r\n            default: function() {\r\n                return 10\r\n            }\r\n        },\r\n        ascendingIcon: {\r\n            type: String,\r\n            default: function() {\r\n                return 'blue chevron up icon'\r\n            }\r\n        },\r\n        descendingIcon: {\r\n            type: String,\r\n            default: function() {\r\n                return 'blue chevron down icon'\r\n            }\r\n        },\r\n        appendParams: {\r\n            type: Array,\r\n            default: function() {\r\n                return []\r\n            }\r\n        },\r\n        showPagination: {\r\n            type: Boolean,\r\n            default: function() {\r\n                return true\r\n            }\r\n        },\r\n        paginationComponent: {\r\n            type: String,\r\n            default: function() {\r\n                return 'vuetable-pagination'\r\n            }\r\n        },\r\n        paginationInfoTemplate: {\r\n            type: String,\r\n            default: function() {\r\n                return \"Displaying {from} to {to} of {total} items\"\r\n            }\r\n        },\r\n        paginationInfoNoDataTemplate: {\r\n            type: String,\r\n            default: function() {\r\n                return 'No relevant data'\r\n            }\r\n        },\r\n        paginationClass: {\r\n            type: String,\r\n            default: function() {\r\n                return 'ui bottom attached segment grid'\r\n            }\r\n        },\r\n        paginationInfoClass: {\r\n            type: String,\r\n            default: function() {\r\n                return 'left floated left aligned six wide column'\r\n            }\r\n        },\r\n        paginationComponentClass: {\r\n            type: String,\r\n            default: function() {\r\n                return 'right floated right aligned six wide column'\r\n            }\r\n        },\r\n        paginationConfig: {\r\n            type: String,\r\n            default: function() {\r\n                return 'paginationConfig'\r\n            }\r\n        },\r\n        paginationConfigCallback: {\r\n            type: String,\r\n            default: function() {\r\n                return 'paginationConfig'\r\n            }\r\n        },\r\n        itemActions: {\r\n            type: Array,\r\n            default: function() {\r\n                return []\r\n            }\r\n        },\r\n        queryParams: {\r\n            type: Object,\r\n            default: function() {\r\n                return {\r\n                    sort: 'sort',\r\n                    page: 'page',\r\n                    perPage: 'per_page'\r\n                }\r\n            }\r\n        },\r\n        loadOnStart: {\r\n            type: Boolean,\r\n            default: function() {\r\n                return true\r\n            }\r\n        },\r\n        selectedTo: {\r\n            type: Array,\r\n            default: function() {\r\n                return []\r\n            }\r\n        },\r\n        httpOptions: {\r\n            type: Object,\r\n            default: function() {\r\n                return {}\r\n            }\r\n        },\r\n        detailRow: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        detailRowCallback: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        detailRowId: {\r\n            type: String,\r\n            default: 'id'\r\n        },\r\n        detailRowTransition: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        detailRowClass: {\r\n            type: String,\r\n            default: 'vuetable-detail-row'\r\n        },\r\n        detailRowComponent: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        rowClassCallback: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n    },\r\n    data: function() {\r\n        return {\r\n            eventPrefix: 'vuetable:',\r\n            tableData: null,\r\n            tablePagination: null,\r\n            currentPage: 1,\r\n            visibleDetailRows: []\r\n        }\r\n    },\r\n    directives: {\r\n        'attr': {\r\n            update: function(value) {\r\n                for (var i in value) {\r\n                    this.el.setAttribute(i, value[i])\r\n                }\r\n            }\r\n        },\r\n    },\r\n    computed: {\r\n        paginationInfo: function() {\r\n            if (this.tablePagination == null || this.tablePagination.total == 0) {\r\n                return this.paginationInfoNoDataTemplate\r\n            }\r\n\r\n            return this.paginationInfoTemplate\r\n                .replace('{from}', this.tablePagination.from || 0)\r\n                .replace('{to}', this.tablePagination.to || 0)\r\n                .replace('{total}', this.tablePagination.total || 0)\r\n        },\r\n        useDetailRow: function() {\r\n            if (this.tableData && typeof this.tableData[0][this.detailRowId] === 'undefined') {\r\n                console.warn('You need to define \"detail-row-id\" in order for detail-row feature to work!')\r\n                return false\r\n            }\r\n\r\n            return this.detailRowCallback.trim() !== '' || this.detailRowComponent !== ''\r\n        },\r\n        useDetailRowComponent: function() {\r\n            return this.detailRowComponent !== ''\r\n        },\r\n        countVisibleFields: function() {\r\n            return this.fields.filter(function (field) {\r\n                return field.visible\r\n            }).length\r\n        }\r\n    },\r\n    methods: {\r\n        normalizeFields: function() {\r\n            var self = this\r\n            var obj\r\n            this.fields.forEach(function(field, i) {\r\n                if (typeof (field) === 'string') {\r\n                    obj = {\r\n                        name: field,\r\n                        title: self.setTitle(field),\r\n                        titleClass: '',\r\n                        dataClass: '',\r\n                        callback: null,\r\n                        visible: true\r\n                    }\r\n                } else {\r\n                    obj = {\r\n                        name: field.name,\r\n                        title: (field.title === undefined) ? self.setTitle(field.name) : field.title,\r\n                        sortField: field.sortField,\r\n                        titleClass: (field.titleClass === undefined) ? '' : field.titleClass,\r\n                        dataClass: (field.dataClass === undefined) ? '' : field.dataClass,\r\n                        callback: (field.callback === undefined) ? '' : field.callback,\r\n                        visible: (field.visible === undefined) ? true : field.visible\r\n                    }\r\n                }\r\n                self.fields.$set(i, obj)\r\n            })\r\n        },\r\n        setTitle: function(str) {\r\n            if (this.isSpecialField(str)) {\r\n                return ''\r\n            }\r\n\r\n            return this.titleCase(str)\r\n        },\r\n        titleCase: function(str)\r\n        {\r\n            return str.replace(/\\w+/g, function(txt){\r\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\r\n            })\r\n        },\r\n        notIn: function(str, arr) {\r\n            return arr.indexOf(str) === -1\r\n        },\r\n        loadData: function() {\r\n            var self = this\r\n\r\n            var wrapper = document.querySelector(this.tableWrapper)\r\n            this.showLoadingAnimation(wrapper)\r\n\r\n            var url = this.apiUrl + '?' + this.getAllQueryParams()\r\n            this.$http.get(url, this.httpOptions)\r\n                .then(function(response) {\r\n                    var body = this.transform(response.body);\r\n                    self.tableData = self.getObjectValue(body, self.dataPath, null)\r\n                    self.tablePagination = self.getObjectValue(body, self.paginationPath, null)\r\n                    if (self.tablePagination === null) {\r\n                        console.warn('vuetable: pagination-path \"' + self.paginationPath + '\" not found. '\r\n                            + 'It looks like the data returned from the sever does not have pagination information '\r\n                            + 'or you may have set it incorrectly.'\r\n                        )\r\n                    }\r\n\r\n                    self.$nextTick(function() {\r\n                        self.dispatchEvent('load-success', response)\r\n                        self.broadcastEvent('load-success', self.tablePagination)\r\n\r\n                        self.hideLoadingAnimation(wrapper)\r\n                    })\r\n                }, function(response) {\r\n                    self.dispatchEvent('load-error', response)\r\n                    self.broadcastEvent('load-error', response)\r\n\r\n                    self.hideLoadingAnimation(wrapper)\r\n                })\r\n        },\r\n        getAllQueryParams: function() {\r\n            var params = [\r\n                this.queryParams.sort + '=' + this.getSortParam(),\r\n                this.queryParams.page + '=' + this.currentPage,\r\n                this.queryParams.perPage + '=' + this.perPage\r\n            ].join('&')\r\n\r\n            if (this.appendParams.length > 0) {\r\n                params += '&'+this.appendParams.join('&')\r\n            }\r\n\r\n            return params\r\n        },\r\n        showLoadingAnimation: function(wrapper) {\r\n            if (wrapper !== null) {\r\n                this.addClass(wrapper, this.loadingClass)\r\n            }\r\n            this.dispatchEvent('loading')\r\n        },\r\n        hideLoadingAnimation: function(wrapper) {\r\n            if (wrapper !== null) {\r\n                this.removeClass(wrapper, this.loadingClass)\r\n            }\r\n            this.dispatchEvent('loaded')\r\n        },\r\n        transform: function(data) {\r\n          let func = 'transform'\r\n\r\n          if (this.parentFunctionExists(func)) {\r\n              return this.$parent[func].call(this.$parent, data)\r\n          }\r\n\r\n          return data\r\n        },\r\n        parentFunctionExists: function(func) {\r\n          return (func !== '' && typeof this.$parent[func] === 'function')\r\n        },\r\n        getTitle: function(field) {\r\n            if (typeof field.title === 'undefined') {\r\n                return field.name.replace('.', ' ')\r\n            }\r\n            return field.title\r\n        },\r\n        getSortParam: function() {\r\n            if (!this.sortOrder || this.sortOrder.field == '') {\r\n                return ''\r\n            }\r\n\r\n            if (typeof this.$parent['getSortParam'] == 'function') {\r\n                return this.$parent['getSortParam'].call(this.$parent, this.sortOrder)\r\n            }\r\n\r\n            return this.getDefaultSortParam()\r\n        },\r\n        getDefaultSortParam: function() {\r\n            var result = '';\r\n\r\n            for(var i=0; i<this.sortOrder.length; i++){\r\n                var fieldName = (typeof this.sortOrder[i].sortField === 'undefined')\r\n                    ? this.sortOrder[i].field\r\n                    : this.sortOrder[i].sortField;\r\n\r\n                result += fieldName +'|' + this.sortOrder[i].direction + ((i+1)<this.sortOrder.length ? ',' : '');\r\n            }\r\n\r\n            return result;\r\n        },\r\n        addClass: function(el, className) {\r\n            if (el.classList)\r\n              el.classList.add(className)\r\n            else\r\n              el.className += ' ' + className\r\n        },\r\n        removeClass: function(el, className) {\r\n            if (el.classList)\r\n              el.classList.remove(className)\r\n            else\r\n              el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ')\r\n        },\r\n        dispatchEvent: function(eventName, args) {\r\n            this.$dispatch(this.eventPrefix + eventName, args)\r\n        },\r\n        broadcastEvent: function(eventName, args) {\r\n            this.$broadcast(this.eventPrefix + eventName, args)\r\n        },\r\n        orderBy: function(field, event) {\r\n            if ( ! this.isSortable(field)) {\r\n                return\r\n            }\r\n\r\n            var key = this.multiSortKey.toLowerCase() + 'Key'\r\n\r\n            if (this.multiSort && event[key]) { //adding column to multisort\r\n                var i = this.currentSortOrder(field);\r\n\r\n                if (i === false) { //this field is not in the sort array yet\r\n                    this.sortOrder.push({\r\n                        field: field.sortField,\r\n                        direction: 'asc'\r\n                    });\r\n                } else { //this field is in the sort array, now we change its state\r\n                    if (this.sortOrder[i].direction == 'asc'){\r\n                        // switch direction\r\n                        this.sortOrder[i].direction = 'desc'\r\n                    } else {\r\n                        //remove sort condition\r\n                        this.sortOrder.splice(i, 1);\r\n                    }\r\n                }\r\n            } else { //no multisort, or resetting sort\r\n                if (this.sortOrder.length == 0){\r\n                    this.sortOrder.push({\r\n                        field: '',\r\n                        direction: 'asc'\r\n                    });\r\n                }\r\n\r\n                this.sortOrder.splice(1); //removes additional columns\r\n\r\n                if (this.sortOrder[0].field == field.sortField) {\r\n                    // change sort direction\r\n                    this.sortOrder[0].direction = this.sortOrder[0].direction == 'asc' ? 'desc' : 'asc'\r\n                } else {\r\n                    // reset sort direction\r\n                    this.sortOrder[0].direction = 'asc'\r\n                }\r\n                this.sortOrder[0].field = field.sortField\r\n            }\r\n\r\n\r\n            this.currentPage = 1    // reset page index\r\n            this.loadData()\r\n        },\r\n        isSortable: function(field) {\r\n            return !(typeof field.sortField == 'undefined')\r\n        },\r\n        isCurrentSortField: function(field) {\r\n            return this.currentSortOrder(field) !== false;\r\n        },\r\n        currentSortOrder: function(field){\r\n            if (!this.isSortable(field)) {\r\n                return false\r\n            }\r\n\r\n            for(var i = 0; i < this.sortOrder.length; i++){\r\n                if(this.sortOrder[i].field == field.sortField){\r\n                    return i;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n        sortIcon: function(field) {\r\n            var i = this.currentSortOrder(field);\r\n            if (i !== false){\r\n                return this.sortOrder[i].direction == 'asc' ?\r\n                    this.ascendingIcon :\r\n                    this.descendingIcon;\r\n            } else {\r\n                return '';\r\n            }\r\n        },\r\n        sortIconOpacity: function(field) {\r\n            //fields with stronger precedence have darker color\r\n\r\n            //if there are few fields, we go down by 0.3\r\n            //ex. 2 fields are selected: 1.0, 0.7\r\n\r\n            //if there are more we go down evenly on the given spectrum\r\n            //ex. 6 fields are selected: 1.0, 0.86, 0.72, 0.58, 0.44, 0.3\r\n\r\n            var max = 1.0;\r\n            var min = 0.3;\r\n            var step = 0.3;\r\n\r\n            var count = this.sortOrder.length;\r\n            var current = this.currentSortOrder(field);\r\n\r\n\r\n            if(max - count*step < min){\r\n               step = (max - min) / (count-1);\r\n            }\r\n\r\n            var opacity = max - current*step;\r\n\r\n            return opacity;\r\n        },\r\n        gotoPreviousPage: function() {\r\n            if (this.currentPage > 1) {\r\n                this.currentPage--\r\n                this.loadData()\r\n            }\r\n        },\r\n        gotoNextPage: function() {\r\n            if (this.currentPage < this.tablePagination.last_page) {\r\n                this.currentPage++\r\n                this.loadData()\r\n            }\r\n        },\r\n        gotoPage: function(page) {\r\n            if (page != this.currentPage && (page > 0 && page <= this.tablePagination.last_page)) {\r\n                this.currentPage = page\r\n                this.loadData()\r\n            }\r\n        },\r\n        isSpecialField: function(fieldName) {\r\n            // return fieldName.startsWith('__')\r\n            return fieldName.slice(0, 2) === '__'\r\n        },\r\n        hasCallback: function(item) {\r\n            return item.callback ? true : false\r\n        },\r\n        callCallback: function(field, item) {\r\n            if ( ! this.hasCallback(field))\r\n                return\r\n\r\n            var args = field.callback.split('|')\r\n            var func = args.shift()\r\n\r\n            if (typeof this.$parent[func] == 'function') {\r\n                return (args.length > 0)\r\n                    ? this.$parent[func].apply(this.$parent, [this.getObjectValue(item, field.name)].concat(args))\r\n                    : this.$parent[func].call(this.$parent, this.getObjectValue(item, field.name))\r\n            }\r\n\r\n            return null\r\n        },\r\n        getObjectValue: function(object, path, defaultValue) {\r\n            defaultValue = (typeof defaultValue == 'undefined') ? null : defaultValue\r\n\r\n            var obj = object\r\n            if (path.trim() != '') {\r\n                var keys = path.split('.')\r\n                keys.forEach(function(key) {\r\n                    if (obj !== null && typeof obj[key] != 'undefined' && obj[key] !== null) {\r\n                        obj = obj[key]\r\n                    } else {\r\n                        obj = defaultValue\r\n                        return\r\n                    }\r\n                })\r\n            }\r\n            return obj\r\n        },\r\n        callAction: function(action, data) {\r\n            this.$dispatch(this.eventPrefix+'action', action, data)\r\n        },\r\n        addParam: function(param) {\r\n            this.appendParams.push(param)\r\n        },\r\n        toggleCheckbox: function(isChecked, dataItem, fieldName) {\r\n            var idColumn = this.extractArgs(fieldName)\r\n            if (idColumn === undefined) {\r\n                console.warn('You did not provide reference id column with \"__checkbox:<column_name>\" field!')\r\n                return\r\n            }\r\n\r\n            var key = dataItem[idColumn]\r\n            if (isChecked) {\r\n                this.selectId(key)\r\n            } else {\r\n                this.unselectId(key)\r\n            }\r\n        },\r\n        toggleAllCheckboxes: function(isChecked, fieldName) {\r\n            var self = this\r\n            var idColumn = this.extractArgs(fieldName)\r\n\r\n            if (isChecked) {\r\n                this.tableData.forEach(function(dataItem) {\r\n                    self.selectId(dataItem[idColumn])\r\n                })\r\n            } else {\r\n                this.tableData.forEach(function(dataItem) {\r\n                    self.unselectId(dataItem[idColumn])\r\n                })\r\n            }\r\n        },\r\n        selectId: function(key) {\r\n            if (! this.isSelectedRow(key)) {\r\n                this.selectedTo.push(key)\r\n            }\r\n        },\r\n        unselectId: function(key) {\r\n            this.selectedTo.$remove(key)\r\n            // this.selectedTo = this.selectedTo.filter(function(item) {\r\n            //     return item !== key\r\n            // })\r\n        },\r\n        isSelectedRow: function(key) {\r\n            return this.selectedTo.indexOf(key) >= 0\r\n        },\r\n        rowSelected: function(dataItem, fieldName) {\r\n            var idColumn = this.extractArgs(fieldName)\r\n            // var key = dataItem[idColumn]\r\n\r\n            return this.isSelectedRow(dataItem[idColumn])\r\n        },\r\n        checkCheckboxesState: function(fieldName) {\r\n            var self = this\r\n            var idColumn = this.extractArgs(fieldName)\r\n            var selector = 'th.checkbox_' + idColumn + ' input[type=checkbox]'\r\n            var els = document.querySelectorAll(selector)\r\n\r\n            // count how many checkbox row in the current page has been checked\r\n            var selected = this.tableData.filter(function(item) {\r\n                return self.selectedTo.indexOf(item[idColumn]) >= 0\r\n            })\r\n\r\n            // count == 0, clear the checkbox\r\n            if (selected.length <= 0) {\r\n                els.forEach(function(el) {\r\n                    el.indeterminate = false\r\n                })\r\n                return false\r\n            }\r\n            // count > 0 and count < perPage, set checkbox state to 'indeterminate'\r\n            else if (selected.length < this.perPage) {\r\n                els.forEach(function(el) {\r\n                    el.indeterminate = true\r\n                })\r\n                return true\r\n            }\r\n            // count == perPage, set checkbox state to 'checked'\r\n            else {\r\n                els.forEach(function(el) {\r\n                    el.indeterminate = false\r\n                })\r\n                return true\r\n            }\r\n        },\r\n        extractName: function(string) {\r\n            return string.split(':')[0].trim()\r\n        },\r\n        extractArgs: function(string) {\r\n            return string.split(':')[1]\r\n        },\r\n        callDetailRowCallback: function(item) {\r\n            var func = this.detailRowCallback.trim()\r\n            if (func === '') {\r\n                return ''\r\n            }\r\n\r\n            if (typeof this.$parent[func] == 'function') {\r\n                return this.$parent[func].call(this.$parent, item)\r\n            } else {\r\n                console.error('Function \"'+func+'()\" does not exist!')\r\n            }\r\n        },\r\n        isVisibleDetailRow: function(rowId) {\r\n            return this.visibleDetailRows.indexOf( rowId ) >= 0\r\n        },\r\n        showDetailRow: function(rowId) {\r\n            if (!this.isVisibleDetailRow(rowId)) {\r\n                this.visibleDetailRows.push(rowId)\r\n            }\r\n        },\r\n        hideDetailRow: function(rowId) {\r\n            if (this.isVisibleDetailRow(rowId)) {\r\n                this.visibleDetailRows.$remove(rowId)\r\n            }\r\n        },\r\n        toggleDetailRow: function(rowId) {\r\n            if (this.isVisibleDetailRow(rowId)) {\r\n                this.hideDetailRow(rowId)\r\n            } else {\r\n                this.showDetailRow(rowId)\r\n            }\r\n        },\r\n        onRowClass: function(dataItem, index) {\r\n            var func = this.rowClassCallback.trim()\r\n\r\n            if (func !== '' && typeof this.$parent[func] === 'function') {\r\n                return this.$parent[func].call(this.$parent, dataItem, index)\r\n            }\r\n            return ''\r\n        },\r\n        onRowChanged: function(dataItem) {\r\n            this.dispatchEvent('row-changed', dataItem)\r\n            return true\r\n        },\r\n        onRowClicked: function(dataItem, event) {\r\n            this.$dispatch(this.eventPrefix+'row-clicked', dataItem, event)\r\n            return true\r\n        },\r\n        onRowDoubleClicked: function(dataItem, event) {\r\n            this.$dispatch(this.eventPrefix + 'row-dblclicked', dataItem, event);\r\n        },\r\n        onCellClicked: function(dataItem, field, event) {\r\n            this.$dispatch(this.eventPrefix+'cell-clicked', dataItem, field, event)\r\n        },\r\n        onCellDoubleClicked: function(dataItem, field, event) {\r\n            this.$dispatch(this.eventPrefix+'cell-dblclicked', dataItem, field, event)\r\n        },\r\n        onDetailRowClick: function(dataItem, event) {\r\n            this.$dispatch(this.eventPrefix+'detail-row-clicked', dataItem, event)\r\n        },\r\n        callPaginationConfig: function() {\r\n            if (typeof this.$parent[this.paginationConfigCallback] === 'function') {\r\n                this.$parent[this.paginationConfigCallback].call(this.$parent, this.$refs.pagination.$options.name)\r\n            }\r\n        },\r\n        logDeprecatedMessage: function(name, replacer) {\r\n            var msg = '\"{name}\" prop is being deprecated and will be removed in the future. Please use \"{replacer}\" instead.'\r\n            console.warn(msg.replace('{name}', name).replace('{replacer}', replacer))\r\n        },\r\n        checkForDeprecatedProps: function() {\r\n            if (this.paginationConfig !== 'paginationConfig') {\r\n                this.logDeprecatedMessage('paginationConfig', 'paginationConfigCallback')\r\n            }\r\n            if (this.detailRow !== '') {\r\n                this.logDeprecatedMessage('detail-row', 'detail-row-callback')\r\n            }\r\n            if (this.detailRowCallback !== '') {\r\n                this.logDeprecatedMessage('detail-row-callback', 'detail-row-component')\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        'multiSort': function(newVal, oldVal){\r\n            if (newVal === false && this.sortOrder.length > 1) {\r\n                this.sortOrder.splice(1);\r\n                this.loadData();\r\n            }\r\n        }\r\n    },\r\n    events: {\r\n        'vuetable-pagination:change-page': function(page) {\r\n            if (page == 'prev') {\r\n                this.gotoPreviousPage()\r\n            } else if (page == 'next') {\r\n                this.gotoNextPage()\r\n            } else {\r\n                this.gotoPage(page)\r\n            }\r\n        },\r\n        'vuetable:reload': function() {\r\n            this.loadData()\r\n        },\r\n        'vuetable:refresh': function() {\r\n            this.currentPage = 1\r\n            this.loadData()\r\n        },\r\n        'vuetable:goto-page': function(page) {\r\n            this.$emit('vuetable-pagination:change-page', page)\r\n        },\r\n        'vuetable:set-options': function(options) {\r\n            for (var n in options) {\r\n                this.$set(n, options[n])\r\n            }\r\n        },\r\n        'vuetable:toggle-detail': function(dataItem) {\r\n            this.toggleDetailRow(dataItem)\r\n        },\r\n        'vuetable:show-detail': function(dataItem) {\r\n            this.showDetailRow(dataItem)\r\n        },\r\n        'vuetable:hide-detail': function(dataItem) {\r\n            this.hideDetailRow(dataItem)\r\n        },\r\n        'vuetable:normalize-fields': function() {\r\n            this.normalizeFields()\r\n        }\r\n    },\r\n    created: function() {\r\n        this.checkForDeprecatedProps()\r\n        this.normalizeFields()\r\n        if (this.loadOnStart) {\r\n            this.loadData()\r\n        }\r\n        this.$nextTick(function() {\r\n            this.callPaginationConfig()\r\n        })\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n    .vuetable th.sortable:hover {\r\n      color: #2185d0;\r\n      cursor: pointer;\r\n    }\r\n    .vuetable-actions {\r\n      width: 15%;\r\n      padding: 12px 0px;\r\n      text-align: center;\r\n    }\r\n    .vuetable-pagination {\r\n      background: #f9fafb !important;\r\n    }\r\n    .vuetable-pagination-info {\r\n      margin-top: auto;\r\n      margin-bottom: auto;\r\n    }\r\n</style>\r\n"],"sourceRoot":"node_modules/vuetable/src/components"}]}