{"remainingRequest":"/home/chemoune/Bureau/vue-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/chemoune/Bureau/vue-project/node_modules/vuetable/src/components/VuetablePaginationDropdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/chemoune/Bureau/vue-project/node_modules/vuetable/src/components/VuetablePaginationDropdown.vue","mtime":1473684622000},{"path":"/home/chemoune/Bureau/vue-project/node_modules/cache-loader/dist/cjs.js","mtime":1544640643324},{"path":"/home/chemoune/Bureau/vue-project/node_modules/babel-loader/lib/index.js","mtime":1544640643152},{"path":"/home/chemoune/Bureau/vue-project/node_modules/cache-loader/dist/cjs.js","mtime":1544640643324},{"path":"/home/chemoune/Bureau/vue-project/node_modules/vue-loader/lib/index.js","mtime":1544640646048}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport PaginationMixin from './VuetablePaginationMixin.vue'\r\n\r\nexport default {\r\n    mixins: [PaginationMixin],\r\n    props: {\r\n        'dropdownClass': {\r\n            type: String,\r\n            default: function() {\r\n                return 'ui search dropdown'\r\n            }\r\n        },\r\n        'pageText': {\r\n            type: String,\r\n            default: function() {\r\n                return 'Page'\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        loadPage: function(page) {\r\n            // update dropdown value\r\n            if (page == 'prev' && !this.isOnFirstPage) {\r\n                this.setDropdownToPage(this.tablePagination.current_page-1)\r\n            } else if (page == 'next' && !this.isOnLastPage) {\r\n                this.setDropdownToPage(this.tablePagination.current_page+1)\r\n            }\r\n\r\n            this.$dispatch('vuetable-pagination:change-page', page)\r\n        },\r\n        setDropdownToPage: function(page) {\r\n            this.$nextTick(function() {\r\n                document.getElementById('vuetable-pagination-dropdown').value = page\r\n            })\r\n        },\r\n        selectPage: function(event) {\r\n            this.$dispatch('vuetable-pagination:change-page', event.target.selectedIndex+1)\r\n        },\r\n    },\r\n    events: {\r\n        'vuetable:load-success': function(tablePagination) {\r\n            this.tablePagination = tablePagination\r\n            this.setDropdownToPage(tablePagination.current_page)\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["VuetablePaginationDropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VuetablePaginationDropdown.vue","sourceRoot":"node_modules/vuetable/src/components","sourcesContent":["<template>\r\n    <div class=\"{{wrapperClass}}\">\r\n        <a @click=\"loadPage('prev')\"\r\n             class=\"{{linkClass}} {{isOnFirstPage ? disabledClass : ''}}\">\r\n            <i :class=\"icons.prev\"></i>\r\n        </a>\r\n        <select id=\"vuetable-pagination-dropdown\" class=\"{{dropdownClass}}\" @change=\"selectPage($event)\">\r\n            <template v-for=\"n in totalPage\">\r\n                <option class=\"{{pageClass}}\" value=\"{{n+1}}\">\r\n                    {{pageText}} {{n+1}}\r\n                </option>\r\n            </template>\r\n        </select>\r\n        <a @click=\"loadPage('next')\"\r\n             class=\"{{linkClass}} {{isOnLastPage ? disabledClass : ''}}\">\r\n            <i :class=\"icons.next\"></i>\r\n        </a>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport PaginationMixin from './VuetablePaginationMixin.vue'\r\n\r\nexport default {\r\n    mixins: [PaginationMixin],\r\n    props: {\r\n        'dropdownClass': {\r\n            type: String,\r\n            default: function() {\r\n                return 'ui search dropdown'\r\n            }\r\n        },\r\n        'pageText': {\r\n            type: String,\r\n            default: function() {\r\n                return 'Page'\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        loadPage: function(page) {\r\n            // update dropdown value\r\n            if (page == 'prev' && !this.isOnFirstPage) {\r\n                this.setDropdownToPage(this.tablePagination.current_page-1)\r\n            } else if (page == 'next' && !this.isOnLastPage) {\r\n                this.setDropdownToPage(this.tablePagination.current_page+1)\r\n            }\r\n\r\n            this.$dispatch('vuetable-pagination:change-page', page)\r\n        },\r\n        setDropdownToPage: function(page) {\r\n            this.$nextTick(function() {\r\n                document.getElementById('vuetable-pagination-dropdown').value = page\r\n            })\r\n        },\r\n        selectPage: function(event) {\r\n            this.$dispatch('vuetable-pagination:change-page', event.target.selectedIndex+1)\r\n        },\r\n    },\r\n    events: {\r\n        'vuetable:load-success': function(tablePagination) {\r\n            this.tablePagination = tablePagination\r\n            this.setDropdownToPage(tablePagination.current_page)\r\n        }\r\n    }\r\n}\r\n</script>"]}]}